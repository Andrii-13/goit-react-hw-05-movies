{"version":3,"file":"static/js/867.0f74ea65.chunk.js","mappings":"8LAGaA,EAAS,WAClB,OACE,4BACE,yBAAK,gBACL,SAAC,KAAD,CACEC,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,oBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,OAAQ,CAAC,UAAW,eAI3B,C,qICbGC,EAAc,mCAAG,WAAMC,GAAN,uFACEC,EAAAA,EAAAA,IAAA,UAAaC,EAAAA,EAAAA,UAAb,OAHV,UAGU,OAAyCF,EAAzC,YAAuD,CAC5EG,OAAQ,CAAEC,QAASF,EAAAA,EAAAA,WAFA,cACfG,EADe,yBAKdA,GALc,2CAAH,sDAOpB,I,sCCVaC,E,QAAcC,GAAAA,GAAH,sG,mBCyExB,EApEgB,WACd,OAA4BC,EAAAA,EAAAA,WAAS,GAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,YAA9B,eAAOK,EAAP,KAAgBC,EAAhB,KAGMd,GADWe,EAAAA,EAAAA,MACGC,SAsBpB,OApBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,sGAEfR,GAAU,GACVE,GAAS,GAHM,SAMLb,EAAeC,GANV,gBAKLmB,EALK,EAKbC,KAAQD,QAEVL,EAAWK,GAPI,kDASfP,GAAS,GATM,yBAWfF,GAAU,GAXK,6EAAH,qDAchBQ,EAAWlB,EACZ,GAAE,CAACA,KAKF,UAACM,EAAD,WACIG,IAAU,SAAC,IAAD,IACVE,IAAS,yBAAK,oCACfE,GACCA,EAAQQ,KACN,YAMO,IALLrB,EAKI,EALJA,GACAsB,EAII,EAJJA,OACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,WACkBC,EACd,EADJC,eAAkBD,YAElB,OACE,2BACE,0BACE,gBACEE,IACEF,EACI,kCAAoCA,EACpCG,EAENC,IAAI,gBACJnC,MAAO,SAGX,4BACE,yBAAG,WAAS4B,MACZ,uBAAIC,KACJ,yBAAG,SAAOC,UAfLxB,EAmBZ,IAEJa,GAA8B,IAAnBA,EAAQiB,SAAgB,wBAAI,2BAG7C,C,uDCzEM,IAAM5B,EAAO,CAClB6B,SAAU,gCACVC,QAAS,mCACTC,WAAY,mC","sources":["components/Loader/loader.jsx","js/apiReviews.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","js/refs.js"],"sourcesContent":["import { Hourglass } from  'react-loader-spinner'\n\n\nexport const Loader = () => {\n    return (\n      <div >\n        <div>Loading...</div>\n        <Hourglass\n          visible={true}\n          height=\"50\"\n          width=\"50\"\n          ariaLabel=\"hourglass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          colors={['#306cce', '#72a1ed']} \n        />\n      </div>\n    );\n  };","import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `movie/`;\n\nconst getFilmReviews = async id => {\n  const responce = await axios.get(`${refs.BASE_URL}${END_POINT}${id}/reviews`, {\n    params: { api_key: refs.API_KEY },\n  });\n  \n  return responce;\n};\nexport default getFilmReviews;\n","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\ndisplay: flex;\nlist-style: none;\nflex-wrap: wrap;\ngap: 10px;\npadding: 0;\n`","import getFilmReviews from 'js/apiReviews';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport defaultPhoto from '../../img/bart.jpg';\nimport { ReviewsList } from './Reviews.styled';\nimport { Loader } from 'components/Loader/loader';\n\nconst Reviews = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [reviews, setReviews] = useState();\n\n  const moviesId = useParams();\n  const id = moviesId.moviesId;\n\n  useEffect(() => {\n    const getReviews = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const {\n          data: { results },\n        } = await getFilmReviews(id);\n        setReviews(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getReviews(id);\n  }, [id]);\n\n  // console.log(reviews);\n\n  return (\n    <ReviewsList>\n       {loader && <Loader />}\n       {error && <div>Error, Please reload this page!</div>}\n      {reviews &&\n        reviews.map(\n          ({\n            id,\n            author,\n            content,\n            created_at,\n            author_details: { avatar_path },\n          }) => {\n            return (\n              <li key={id}>\n                <div>\n                  <img\n                    src={\n                      avatar_path\n                        ? 'https://image.tmdb.org/t/p/w500' + avatar_path\n                        : defaultPhoto\n                    }\n                    alt=\"author avatar\"\n                    width={100}\n                  ></img>\n                </div>\n                <div>\n                  <p>Author: {author}</p>\n                  <p>{content}</p>\n                  <p>Time: {created_at}</p>\n                </div>\n              </li>\n            );\n          }\n        )}\n      {reviews && reviews.length === 0 && <li>There is no comment.</li>}\n    </ReviewsList>\n  );\n};\n\nexport default Reviews;\n","export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '9322e843d0da07a43a222238c5af1c78',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/'\n};\n\n\n//      --url 'https://api.themoviedb.org/3/search/movie?query=batman&include_adult=false&language=en-US&page=1' \\\n"],"names":["Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","getFilmReviews","id","axios","refs","params","api_key","responce","ReviewsList","styled","useState","loader","setLoader","error","setError","reviews","setReviews","useParams","moviesId","useEffect","getReviews","results","data","map","author","content","created_at","avatar_path","author_details","src","defaultPhoto","alt","length","BASE_URL","API_KEY","POSTER_URL"],"sourceRoot":""}