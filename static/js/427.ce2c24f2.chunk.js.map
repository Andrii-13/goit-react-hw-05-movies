{"version":3,"file":"static/js/427.ce2c24f2.chunk.js","mappings":"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","sources":["components/SearchFilm/SearchFilm.styled.js","js/apiQuery.js","components/SearchFilm/SearchFilm.jsx","Pages/Movies.jsx","components/ListMovies/ListMovies.styled.js","components/FilmItem/FilmItem.jsx","components/Loader/loader.styled.js","components/Loader/loader.jsx","components/MovieDetails/MoveDetails.styled.js","js/apiFilm.js","components/CastLink/CastLink.jsx","components/ReviewsLink/ReviewsLink.jsx","components/AdditInform/AdditInform.styled.js","components/AdditInform/AdditInform.jsx","components/MovieDetails/MoveDetails.jsx","components/Section/Section.styled.js","js/refs.js"],"sourcesContent":["import { Field } from 'formik';\nimport styled from 'styled-components';\n\nexport const Input = styled(Field)`\n  width: 300px;\n  font-size: 13px;\n  padding: 6px 0 4px 10px;\n  border: 1px solid #cecece;\n  background: #f6f6f6;\n  border-radius: 8px;\n`;\n\nexport const SearchButton = styled.button`\n  font-size: 13px;\n  font-weight: 600;\n  padding: 6px 10px 4px 10px;\n  border: 1px solid #cecece;\n  background: #f6f6f6;\n  border-radius: 8px;\n  margin-top: 40px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(204, 203, 203);\n  }\n\n  &:active {\n    background-color: rgb(179, 179, 179);\n  }\n`;\n","import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `search/movie`;\n\nconst getFilmQuery = async query => {\n  const responce = await axios.get(`${refs.BASE_URL}${END_POINT}`, {\n    params: { api_key: refs.API_KEY, query: query },\n  });\n  \n  return responce;\n};\nexport default getFilmQuery;\n","import {\n  Formik,\n  Form,\n  // , ErrorMessage\n} from 'formik';\nimport { Input, SearchButton } from './SearchFilm.styled';\n// import { object, string } from 'yup';\nimport getFilmQuery from 'js/apiQuery';\nimport {\n  //  useLocation,\n  useSearchParams,\n} from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport FilmItem from 'components/FilmItem/FilmItem';\nimport { Loader } from 'components/Loader/loader';\n\n// const userSchema = object({\n//   film: string().min(5).required().lowercase().trim(),\n// });\n\nconst SearchFilm = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const [films, setFilms] = useState();\n  const [params, setParams] = useSearchParams();\n\n  // const location = useLocation();\n\n  const initialValue = {\n    film: '',\n  };\n\n  const handleSubmit = (values, { resetForm }) => {\n    setParams(values);\n    resetForm();\n  };\n\n  useEffect(() => {\n    const filmQuery = params.get('film');\n\n    const getMoveQuery = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const {\n          data: { results },\n        } = await getFilmQuery(filmQuery);\n        setFilms(results);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getMoveQuery(filmQuery);\n  }, [params]);\n\n  return (\n    <div>\n      {loader && <Loader />}\n      {error && <div>Error, Please reload this page!</div>}\n      <Formik\n        initialValues={initialValue}\n        onSubmit={handleSubmit}\n        // validationSchema={userSchema}\n      >\n        <Form autoComplete=\"off\">\n          <SearchButton type=\"submit\">Search</SearchButton>\n          <Input type=\"text\" name=\"film\" placeholder=\"Enter film...\" />\n          {/* <ErrorMessage name=\"film\" component=\"div\" /> */}\n        </Form>\n      </Formik>\n      {films && <FilmItem films={films} />}\n    </div>\n  );\n};\n\nexport default SearchFilm;\n","import React from 'react';\nimport { Container } from 'components/Container/Container.styled';\nimport { Section } from 'components/Section/Section.styled';\nimport MoveDetails from 'components/MovieDetails/MoveDetails';\nimport SearchFilm from 'components/SearchFilm/SearchFilm';\n\nconst Movies = () => {\n  return (\n    <main>\n      <Section>\n        <Container>\n          {<SearchFilm /> ??\n          <MoveDetails />}\n        </Container>\n      </Section>\n    </main>\n  );\n};\n\nexport default Movies;\n","import styled from 'styled-components';\n\nexport const ListNameMovies = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n  padding: 0;\n\n  li {\n    border-radius: 10px;\n    background-color: white;\n    padding: 10px;\n    width: 200px;\n    margin-bottom: 10px;\n    font-weight: 600;\n     box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n    0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n    justify-content: center;\n  }\n\n \n\nimg{\n    border-radius: 10px;\n    margin-bottom: 5px;\n    display: block;\n}\n\n`;\nexport const TitleFilm = styled.div`\ndisplay: flex;;\npadding: 10px 10px;\njustify-content: center ;\nalign-items: center;\n`\n","import { ListNameMovies, TitleFilm } from 'components/ListMovies/ListMovies.styled';\nimport React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultPhoto from '../../img/bart.jpg'\n\nconst FilmItem = ({films}) => {\n  const styleLink = {\n    textDecoration: 'none',\n    color: 'black',\n  };\n\n  const location = useLocation();\n  // console.log(location);\n\n  return (\n    <ListNameMovies>\n    {films.map(({ id, title, poster_path }) => {\n      return (\n        <li key={id}>\n          <Link style={styleLink} to={`/movies/${id}`} state={location}>\n            <div>\n              <img\n                src={poster_path ? ['https://image.tmdb.org/t/p/w500' + poster_path] : defaultPhoto}\n                alt=\"poster\"\n                width={200}\n              />\n            </div>\n\n            <TitleFilm> {title}</TitleFilm>\n          </Link>\n        </li>\n      );\n    })}\n  </ListNameMovies>\n  );\n};\n\nexport default FilmItem;\n","import styled from 'styled-components'\n\nexport const LoaderWrap =  styled.div`\n   position: absolute;\n   top: 50%;\n   left: 50%;\n`\n\nexport const LoadMessage =  styled.div`\nmargin-bottom: 10px;\n    font-size: large;\n    font-weight: 500;\n`\n \n    \n","import { Hourglass } from  'react-loader-spinner'\nimport { LoadMessage, LoaderWrap } from './loader.styled';\n\n\nexport const Loader = () => {\n    return (\n      <LoaderWrap >\n        <LoadMessage>Loading...</LoadMessage>\n        <Hourglass\n          visible={true}\n          height=\"50\"\n          width=\"50\"\n          ariaLabel=\"hourglass-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"\"\n          colors={['#306cce', '#72a1ed']} \n        />\n      </LoaderWrap>\n    );\n  };","import styled from 'styled-components';\n\nexport const Genres = styled.div`\n  display: flex;\n  gap: 10px;\n`;\nexport const FilmPageWrap = styled.div`\n  display: block;\n\n  button {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ImgWrap = styled.div`\n  width: 400px;\n  border-radius: 10px;\n  background-color: white;\n  padding: 10px;\n\n  box-shadow: 0px 2px 1px rgba(46, 47, 66, 0.4),\n    0px 4px 4px rgba(46, 47, 66, 0.4), 0px 6px 6px rgba(46, 47, 66, 0.4);\n\n  img {\n    min-width: 100%;\n    border-radius: 10px;\n  }\n`;\n\nexport const InfoWrap = styled.div`\n  display: flex;\n  flex-wrap: nowrap;\n  gap: 10px;\n`;\n\nexport const AddInfoList = styled.ul`\n  display: flex;\n  gap: 20px;\n  list-style: none;\n  font-size: 20px;\n  padding: 10px;\n`;\n\nexport const BackLink = styled.p`\n  display: block;\n  font-size: 15px;\n  font-weight: 600;\n  padding: 10px 20px;\n  border: 1px solid #cecece;\n  background: #f6f6f6;\n  border-radius: 8px;\n  margin-bottom: 10px;\n  margin-top: 40px;\n  width: max-content;\n\n  &:hover {\n    cursor: pointer;\n    background-color: rgb(204, 203, 203);\n  }\n\n  &:active {\n    background-color: rgb(179, 179, 179);\n  }\n`;\n","import axios from 'axios';\nimport { refs } from './refs';\n\nconst END_POINT = `movie/`;\n\nconst getFilmInfo = async id => {\n  const responce = await axios.get(`${refs.BASE_URL}${END_POINT}${id}`, {\n    params: { api_key: refs.API_KEY },\n  });\n  \n  return responce;\n};\nexport default getFilmInfo;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst CastLink = () => {\n  return (\n    <li>\n      <Link to=\"cast\">Cast</Link>\n    </li>\n  );\n};\n\nexport default CastLink;\n","import React from 'react'\nimport { Link } from 'react-router-dom';\n\nconst ReviewsLink = () => {\n  return (\n    <li>\n      <Link to=\"reviews\">Reviews</Link>\n    </li>\n  );\n}\n\nexport default ReviewsLink","import styled from 'styled-components';\n\nexport const AdditInformWrap = styled.div`\n\n\n    h3{\n        font-size: large;\n        font-weight: 600;\n        text-align: center;\n    }\n`;","import React from 'react'\nimport { AddInfoList } from '../MovieDetails/MoveDetails.styled'\nimport CastLink from 'components/CastLink/CastLink'\nimport ReviewsLink from 'components/ReviewsLink/ReviewsLink'\nimport { AdditInformWrap } from './AdditInform.styled'\n\nconst AdditInform = () => {\n  return (\n    <AdditInformWrap>\n      <h3>Additional information</h3>\n            <AddInfoList>\n              <CastLink />\n              <ReviewsLink />\n            </AddInfoList>\n    </AdditInformWrap>\n  )\n}\n\nexport default AdditInform","import React, { Suspense, useRef, useState } from 'react';\nimport {\n  BackLink,\n  FilmPageWrap,\n  Genres,\n  ImgWrap,\n  InfoWrap,\n} from './MoveDetails.styled';\nimport { refs } from 'js/refs';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport getFilmInfo from 'js/apiFilm';\nimport { useEffect } from 'react';\nimport { Container } from 'components/Container/Container.styled';\nimport { Section } from 'components/Section/Section.styled';\nimport defaultPhoto from '../../img/bart.jpg';\nimport { Loader } from 'components/Loader/loader';\nimport AdditInform from '../AdditInform/AdditInform';\n\nconst MoveDetails = () => {\n  const [loader, setLoader] = useState(false);\n  const [error, setError] = useState(false);\n  const moveId = useParams();\n  const id = moveId.moviesId;\n  const [film, setFilm] = useState(moveId);\n\n  const { poster_path, title, vote_average, overview, genres = [] } = film;\n\n  const location = useLocation();\n  const backLinkLocationRef = useRef(location.state ?? '/');\n\n  // не можу зрозуміти чому в такому варіанті який пропонується не хоче працювати!!!\n\n  //   const backLinkLocationRef = useRef(location.state?.from ?? '/');\n\n  // показує underfind і викидає на головну сторінку\n\n  // console.log(backLinkLocationRef);\n\n  useEffect(() => {\n    const getFilm = async () => {\n      try {\n        setLoader(true);\n        setError(false);\n        const { data } = await getFilmInfo(id);\n        setFilm(data);\n      } catch (error) {\n        setError(true);\n      } finally {\n        setLoader(false);\n      }\n    };\n    getFilm(id);\n  }, [id]);\n\n  const urlPoster = refs.POSTER_URL + poster_path;\n\n  return (\n    <main>\n      <Section>\n        {loader && <Loader />}\n        {error && <div>Error, Please reload this page!</div>}\n        {poster_path && (\n          <Container>\n            <FilmPageWrap>\n              <Link to={backLinkLocationRef.current}>\n                <BackLink>Go Back</BackLink>\n              </Link>\n              <InfoWrap>\n                <ImgWrap>\n                  <img\n                    src={poster_path ? urlPoster : defaultPhoto}\n                    alt=\"films poster\"\n                    width={300}\n                  />\n                </ImgWrap>\n                <div>\n                  <h1>{title}</h1>\n                  <div>\n                    <h2>User Score:</h2>\n                    <p> {Math.ceil(vote_average * 10)}%</p>\n                  </div>\n                  <div>\n                    <h2>Overview:</h2>\n                    <p> {overview}</p>\n                  </div>\n                  <div>\n                    <h2>Genres:</h2>\n                    <Genres>\n                      {genres.map(({ name, id }) => (\n                        <span key={id}>{name}</span>\n                      ))}\n                    </Genres>\n                  </div>\n                </div>\n              </InfoWrap>\n            </FilmPageWrap>\n            <AdditInform />\n            <Suspense>\n              <Outlet />\n            </Suspense>\n          </Container>\n        )}\n      </Section>\n    </main>\n  );\n};\n\nexport default MoveDetails;\n","import styled from \"styled-components\";\n\nexport const Section = styled.section`\npadding: 20px 0;\n`","export const refs = {\n  BASE_URL: 'https://api.themoviedb.org/3/',\n  API_KEY: '9322e843d0da07a43a222238c5af1c78',\n  POSTER_URL: 'https://image.tmdb.org/t/p/w500/'\n};\n\n\n//      --url 'https://api.themoviedb.org/3/search/movie?query=batman&include_adult=false&language=en-US&page=1' \\\n"],"names":["Input","styled","Field","SearchButton","getFilmQuery","query","axios","refs","params","api_key","responce","useState","loader","setLoader","error","setError","films","setFilms","useSearchParams","setParams","useEffect","filmQuery","get","getMoveQuery","results","data","initialValues","film","onSubmit","values","resetForm","autoComplete","type","name","placeholder","FilmItem","MoveDetails","ListNameMovies","TitleFilm","styleLink","textDecoration","color","location","useLocation","map","id","title","poster_path","style","to","state","src","defaultPhoto","alt","width","LoaderWrap","LoadMessage","Loader","visible","height","ariaLabel","wrapperStyle","wrapperClass","colors","Genres","FilmPageWrap","ImgWrap","InfoWrap","AddInfoList","BackLink","getFilmInfo","AdditInformWrap","moveId","useParams","moviesId","setFilm","vote_average","overview","genres","backLinkLocationRef","useRef","getFilm","urlPoster","current","Math","ceil","Suspense","Section","BASE_URL","API_KEY","POSTER_URL"],"sourceRoot":""}